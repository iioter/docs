upstream websocket{
	# docker内访问宿主机（win或mac）----注意：宿主机需在hosts文件中增加一条  host.docker.internal  127.0.0.1
	# Linux或实际部署弄成实际IP即可
    server host.docker.internal:81;
}

gzip on;
gzip_disable "msie6";
gzip_static on; 

server {
	listen       80;
	server_name localhost;	
	index index index.html index.htm;	
	access_log /dev/null;
    error_log  /var/log/nginx/default.error.log  warn;
	
  location / {
		root /var/www/html;
		try_files $uri $uri/ /index.html;
		
		index index index.html index.htm;
		
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
	}


  location /api/ {
    #重写
	rewrite ^/api/(.*)$ /$1 break;  
	# docker内访问宿主机（win或mac）----注意：宿主机需在hosts文件中增加一条  host.docker.internal  127.0.0.1
	# Linux或实际部署弄成实际IP即可
    proxy_pass http://host.docker.internal:81;	
	
	#如果服务器要获取客户端真实IP，可以用下三句设置主机头和客户端真实地址
    proxy_set_header Host $http_host;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
  
  location /hubs/ {
		# rewrite ^/hubs/(.*)$ /$1 break;
        proxy_pass http://websocket;		
		# WebScoket Support                    
		proxy_http_version 1.1;                                                              
		proxy_set_header Upgrade $http_upgrade;              
		proxy_set_header Connection "upgrade";   
    }
}